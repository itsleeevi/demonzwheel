[{"/home/levi/wheel_latest/client/pages/ConnectMetaMask.js":"1","/home/levi/wheel_latest/client/pages/ControlComponent.js":"2","/home/levi/wheel_latest/client/pages/PlaceBet.js":"3","/home/levi/wheel_latest/client/pages/_app.js":"4","/home/levi/wheel_latest/client/pages/index.js":"5"},{"size":664,"mtime":1631799012696,"results":"6","hashOfConfig":"7"},{"size":6347,"mtime":1631820499598,"results":"8","hashOfConfig":"7"},{"size":2001,"mtime":1631793285453,"results":"9","hashOfConfig":"7"},{"size":137,"mtime":1631277025197,"results":"10","hashOfConfig":"7"},{"size":6514,"mtime":1631820504646,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13bmx8b",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/home/levi/wheel_latest/client/pages/ConnectMetaMask.js",[],"/home/levi/wheel_latest/client/pages/ControlComponent.js",[],"/home/levi/wheel_latest/client/pages/PlaceBet.js",[],"/home/levi/wheel_latest/client/pages/_app.js",[],"/home/levi/wheel_latest/client/pages/index.js",["23","24"],"import { Box } from \"grommet\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\nimport styles from \"../styles/Home.module.css\";\nimport { useState, useEffect } from \"react\";\nimport ControlComponent from \"./ControlComponent\";\nimport { grommet } from \"grommet/themes\";\nimport { Grommet, Heading } from \"grommet\";\nimport \"../styles/Home.module.css\";\nimport { deepMerge } from \"grommet/utils\";\nimport Web3 from \"web3\";\nimport Wheel from \"../src/contracts/Wheel.json\";\nimport LLTH from \"../src/contracts/LLTH.json\";\n\nconst State = {\n  NOTSTARTED: 0,\n  BETTING: 1,\n  WAITING: 2,\n  SPINNING: 3,\n  COMPLETED: 4,\n};\n\nconst customTheme = {\n  rangeInput: {\n    thumb: { color: \"#29112c\" },\n    track: { color: \"#fff\" },\n  },\n  button: {\n    border: {\n      radius: \"4px\",\n    },\n    hover: {\n      color: \"#81FCED\",\n    },\n  },\n\n  global: {\n    colors: {\n      border: \"#29112C\",\n      placeholder: \"#fff\",\n      text: \"#fff\",\n    },\n    focus: {\n      shadow: {\n        color: \"#33FFFF\",\n      },\n      border: {\n        color: \"#9933FF\",\n      },\n    },\n    elevation: {\n      light: {\n        large: \"#9933FF\",\n      },\n      dark: {\n        large: \"#9933FF\",\n      },\n    },\n    drop: {\n      background: \"#29112C\",\n      elevation: \"large\",\n      extend: `\n     \n          font-size: 14px;\n          border-bottom-left-radius: 1px;\n          border-bottom-right-radius: 1px;\n          li {\n            border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n          }\n          overflow: hidden;\n        `,\n    },\n  },\n};\n\nexport default function Home() {\n  const [valueBet, setValueBet] = useState(undefined);\n  const [multiplier, setMultiplier] = useState(2);\n  const [winningMultiplier, setWinningMultiplier] = useState(undefined);\n  const [connected, setConnected] = useState(false);\n  const [state, setState] = useState(State.BETTING);\n  const [accounts, setAccounts] = useState([]);\n  const [web3, setWeb3] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  const [token, setToken] = useState(undefined);\n  const [placedBet, setPlacedBet] = useState(false);\n  const [owner, setOwner] = useState(undefined);\n  const gameAddress = \"0xA583Cb798ebe0f9C98Fb270a7C39109AD1ca9Fd7\";\n  const tokenAddress = \"0xEf18BBAA98E55751c2983B976eB0540fe94E040D\";\n\n  useEffect(() => {\n    const init = async () => {\n      if (token !== undefined) {\n        const balance = await token.methods.balanceOf(gameAddress).call();\n        console.log(\"balance: \", balance);\n      }\n    };\n\n    if (window.ethereum) {\n      const web3 = new Web3(window.ethereum);\n      const owner = web3.eth.accounts.privateKeyToAccount(\n        process.env.NEXT_PUBLIC_PRIVATE_KEY\n      );\n      setOwner(owner);\n      setWeb3(web3);\n      setContract(new web3.eth.Contract(Wheel.abi, gameAddress));\n      setToken(new web3.eth.Contract(LLTH.abi, tokenAddress));\n\n      init();\n    }\n  }, []);\n\n  const connect = async () => {\n    const accs = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    setAccounts(accs);\n  };\n\n  useEffect(() => {\n    if (accounts !== undefined && accounts.length > 0) {\n      setConnected(true);\n    } else {\n      setConnected(false);\n    }\n  }, [accounts]);\n\n  useEffect(() => {\n    if (placedBet) setState(State.SPINNING);\n  }, [placedBet]);\n\n  useEffect(() => {\n    if (state === State.BETTING) {\n      setPlacedBet(false);\n      setValueBet(undefined);\n      setWinningMultiplier(undefined);\n    } else if (state === State.SPINNING) {\n      const getWinningMultiplier = async () => {\n        const winningMultiplier = await contract.methods\n          .winningMultiplierOf(accounts[0])\n          .call();\n        setWinningMultiplier(winningMultiplier);\n      };\n      getWinningMultiplier();\n      const spinning = setTimeout(() => setState(State.COMPLETED), 5000);\n      return () => clearTimeout(spinning);\n    } else if (state === State.COMPLETED) {\n      const closeRound = async () => {\n        const tx = await contract.methods.closeRound(accounts[0]);\n        await send(web3, owner, tx);\n      };\n      closeRound();\n    }\n  }, [state]);\n\n  const placeBet = async () => {\n    console.log(\"multi: \", multiplier);\n    setState(State.WAITING);\n    try {\n      if (\n        (await token.methods.allowance(accounts[0], gameAddress).call()) <\n        web3.utils.toWei(valueBet.toString(), \"ether\")\n      ) {\n        await token.methods\n          .approve(\n            gameAddress,\n            web3.utils.toWei(web3.utils.toBN(100000000000), \"ether\")\n          )\n          .send({ from: accounts[0], gas: 3000000 });\n      }\n      await contract.methods\n        .placeBet(web3.utils.toWei(valueBet.toString(), \"ether\"), multiplier)\n        .send({ from: accounts[0], gas: 3000000 });\n\n      setPlacedBet(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  async function send(web3, account, transaction) {\n    const options = {\n      to: transaction._parent._address,\n      data: transaction.encodeABI(),\n      gas: 3000000,\n    };\n    const signed = await web3.eth.accounts.signTransaction(\n      options,\n      account.privateKey\n    );\n    const receipt = await web3.eth.sendSignedTransaction(signed.rawTransaction);\n    return receipt;\n  }\n\n  return (\n    <Grommet\n      theme={deepMerge(grommet, customTheme)}\n      style={{\n        backgroundColor: \"#000\",\n      }}\n    >\n      <Head>\n        <title>Demonz Wheel</title>\n      </Head>\n      <div className={styles.container}>\n        <main className={styles.main}>\n          <Heading size=\"large\" color=\"#fff\">\n            Demonz Wheel\n          </Heading>\n\n          <div className={styles.grid}>\n            <Box\n              direction=\"row\"\n              border={{ color: \"#29112c\", size: \"large\" }}\n              pad=\"medium\"\n            >\n              <ControlComponent\n                valueBet={valueBet}\n                setValueBet={setValueBet}\n                multiplier={multiplier}\n                setMultiplier={setMultiplier}\n                connected={connected}\n                setConnected={setConnected}\n                state={state}\n                setState={setState}\n                connect={connect}\n                placeBet={placeBet}\n                winningMultiplier={winningMultiplier}\n                placedBet={placedBet}\n              />\n            </Box>\n          </div>\n        </main>\n\n        <footer className={styles.footer}>\n          <a href=\"https://cryptodemonz.com/\">Powered by Crypto Demonz</a>\n        </footer>\n      </div>\n    </Grommet>\n  );\n}\n",{"ruleId":"25","severity":1,"message":"26","line":111,"column":6,"nodeType":"27","endLine":111,"endColumn":8,"suggestions":"28"},{"ruleId":"25","severity":1,"message":"29","line":154,"column":6,"nodeType":"27","endLine":154,"endColumn":13,"suggestions":"30"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["31"],"React Hook useEffect has missing dependencies: 'accounts', 'contract.methods', 'owner', and 'web3'. Either include them or remove the dependency array.",["32"],{"desc":"33","fix":"34"},{"desc":"35","fix":"36"},"Update the dependencies array to be: [token]",{"range":"37","text":"38"},"Update the dependencies array to be: [accounts, contract.methods, owner, state, web3]",{"range":"39","text":"40"},[2879,2881],"[token]",[4088,4095],"[accounts, contract.methods, owner, state, web3]"]